name: "Deploy dev server"

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:

  find-changes:
    name: "Find changes"
    if: ${{ !contains(github.event.head_commit.message, 'skip-ci-cd') }}
    runs-on: ubuntu-latest
    outputs:
      model_changes: ${{ steps.model-changes.outputs.MODEL_CHANGES }}
      blog-changes: ${{ steps.blog-changes.outputs.BLOG_CHANGES }}
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - id: model-changes
      name: model-changes
      run: |
        if [ ! -z "$(git diff --name-only -r HEAD^1 HEAD | grep '^model/')" ]; then
          echo 'Model changed'
          echo "MODEL_CHANGES=1" >> "$GITHUB_OUTPUT"
        fi
    - id: blog-changes
      name: blog-changes
      run: |
        if [ ! -z "$(git diff --name-only -r HEAD^1 HEAD | grep '^server/')" ]; then
          echo 'Blog changed'
          echo "BLOG_CHANGES=1" >> "$GITHUB_OUTPUT"
        fi

  blog-build:
    name: "Build Blog & Deploy"
    runs-on: ubuntu-latest
    needs: ["find-changes"]
    if: ${{ needs.find-changes.outputs.blog-changes == '1' || github.event_name == 'workflow_dispatch' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Build & Push
        uses: ./.github/actions/build-image
        with:
          LOCAL_DIR: server
          ECR_IMAGE: blog
          ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
      - name: Deploy
        uses: ./.github/actions/deploy
        with:
          ARGO_CD_APP_NAME: blog
          ARGOCD_SERVER: ${{ secrets.ARGOCD_SERVER }}
          ARGOCD_USERNAME: ${{ secrets.ARGOCD_USERNAME }}
          ARGOCD_PASSWORD: ${{ secrets.ARGOCD_PASSWORD }}

  model-build:
    name: "Build Model & Deploy"
    runs-on: ubuntu-latest
    needs: ["find-changes"]
    if: ${{ needs.find-changes.outputs.model-changes == '1' || github.event_name == 'workflow_dispatch' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Build & Push
        uses: ./.github/actions/build-image
        with:
          LOCAL_DIR: model
          ECR_IMAGE: model
          ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
      - name: Deploy
        uses: ./.github/actions/deploy
        with:
          ARGO_CD_APP_NAME: model
          ARGOCD_SERVER: ${{ secrets.ARGOCD_SERVER }}
          ARGOCD_USERNAME: ${{ secrets.ARGOCD_USERNAME }}
          ARGOCD_PASSWORD: ${{ secrets.ARGOCD_PASSWORD }}
